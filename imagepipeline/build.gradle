/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

import com.facebook.fresco.buildsrc.Deps
import com.facebook.fresco.buildsrc.TestDeps

apply plugin: 'com.android.library'
apply plugin: 'maven'

dependencies {
    compileOnly "androidx.annotation:annotation:${versions.androidx.annotation}"
    compileOnly "androidx.legacy:legacy-support-core-utils:${versions.androidx.legacy_support_core_utils}"
    compileOnly Deps.jsr305
    compileOnly Deps.inferAnnotation
    compileOnly Deps.javaxAnnotation

    api project(':imagepipeline-base')
    implementation Deps.SoLoader.nativeloader
    implementation Deps.SoLoader.soloaderAnnotation

    implementation Deps.Bolts.tasks
    implementation project(':fbcore')
    
    testImplementation "androidx.legacy:legacy-support-core-utils:${versions.androidx.legacy_support_core_utils}"
    testImplementation Deps.jsr305
    testImplementation project(':imagepipeline-test')
    testImplementation project(':imagepipeline-base-test')
    testImplementation project(':native-imagetranscoder')
    testImplementation TestDeps.junit
    testImplementation "org.easytesting:fest-assert-core:${FEST_ASSERT_CORE_VERSION}"
    testImplementation "org.mockito:mockito-core:${MOCKITO_CORE_VERSION}"
    testImplementation("org.powermock:powermock-api-mockito2:${POWERMOCK_VERSION}") {
        exclude group: 'org.mockito', module: 'mockito-all'
    }
    testImplementation "org.powermock:powermock-module-junit4:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-module-junit4-rule:${POWERMOCK_VERSION}"
    testImplementation "org.powermock:powermock-classloading-xstream:${POWERMOCK_VERSION}"
    testImplementation("org.robolectric:robolectric:${ROBOLECTRIC_VERSION}") {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    testImplementation "com.google.truth:truth:1.0.1"
}
apply from: rootProject.file('release.gradle')

android {
    buildToolsVersion FrescoConfig.buildToolsVersion
    compileSdkVersion FrescoConfig.compileSdkVersion

    defaultConfig {
        minSdkVersion FrescoConfig.minSdkVersion
        targetSdkVersion FrescoConfig.targetSdkVersion
    }
    sourceSets {
        test {
            java {
                exclude '**/LocalVideoThumbnailProducerTest.java'
                exclude '**/DecodeProducerTest.java'
                exclude '**/HttpUrlConnectionNetworkFetcherTest.java'
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
artifacts.add('archives', sourcesJar)
